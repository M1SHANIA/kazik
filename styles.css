* {
  box-sizing: border-box;
}

body {
  font-family: Arial, sans-serif;
  background-image: url("img/bonanza-bg.jpg");
  background-repeat: no-repeat;
  background-size: 120%;
  background-position: center;
  /* если что-то не помещается на своё место — скрываем то, что не поместилось */
}

.container {
  display: grid;
  width: 100%;
  place-items: center;
}

img {
  display: block;
  height: 110pt;
}

h1 {
  color: #f5e143;
  font-size: 50px;
  font-weight: 800;
  -webkit-text-stroke: 2px #dd0869;
  text-shadow: #dd0869 3px 3px 3px; 
  margin: 20px;
}

p {
  width: 500px;
  color: #f3dc2a;
  text-shadow: #dd0869 3px 3px 3px; 
  font-size: 24px;
  font-weight: 600; 
  padding: 10px;
  background: linear-gradient(rgba(219, 101, 255, 0.7), rgba(239, 188, 255, 0.7));
  background-size: 100%;
  border-radius: 30px;
  border: rgba(226, 130, 255, 0.378) 2px solid;
  text-align: center;
  margin: 0;
}

/* общий блок для всех элементов */
.deal-wheel {
  background-image: url("img/wheel-bg.png");
  background-size: 100%;
  padding: 35px;
  /* задаём переменные блока */
  /* размеры колеса */
  --size: clamp(250px, 80vmin, 400px);
  /* настройки яркости и заливки фона секторов */
  --lg-hs: 0 3%;
  --lg-stop: 50%;
  --lg: linear-gradient(
      hsl(var(--lg-hs) 0%) 0 var(--lg-stop),
      hsl(var(--lg-hs) 20%) var(--lg-stop) 100%
    );
  /* добавляем позиционирование относительно других элементов */
  position: relative;
  /* подключаем сетку */
  display: grid;
  grid-gap: calc(var(--size) / 20);
  /* выравниваем содержимое блока по центру */
  align-items: center;
  /* задаём имена областей внутри сетки */
  grid-template-areas:
    "spinner"
    "trigger";
  /* устанавливаем размер шрифта */
  font-size: calc(var(--size) / 21);
}

/* всё, что относится ко внутренним элементам главного блока, будет находиться в области сетки с названием spinner */
.deal-wheel > * {
  grid-area: spinner;
}

/* сам блок и кнопка будут находиться в области сетки с названием trigger и будут выровнены по центру */
.deal-wheel .btn-spin {
  grid-area: trigger;
  justify-self: center;
}

/* сектор колеса */
.spinner {
  /* добавляем относительное позиционирование */
  position: relative;
  /* подключаем сетку */
  display: grid;
  /* выравниваем всё по центру */
  align-items: center;
  /* добавляем элемент в сетку */
  grid-template-areas: "spinner";
  /* устанавливаем размеры */
  width: var(--size);
  height: var(--size);
  /* поворачиваем элемент  */
  transform: rotate(calc(var(--rotate, 25) * 1deg));
  /* рисуем круглую обводку, а всё, что не поместится, — будет скрыто за кругом */
  border-radius: 50%;
}

/* всё, что внутри этого блока, будет находиться в области сетки с названием spinner */
.spinner * {
  grid-area: spinner;
}

/* текст на секторах */
.prize {
  /* включаем «гибкую» вёрстку */
  display: flex;
  align-items: center;
  /* задаём отступы от краёв блока */
  padding: 0 calc(var(--size) / 7) 0 calc(var(--size) / 150);
  /* устанавливаем размеры */
  width: 45%;
  height: 45%;
  /* устанавливаем координаты, относительно которых будем вращать текст */
  transform-origin: center right;
  /* поворачиваем текст */
  transform: rotate(var(--rotate));
  /* запрещаем пользователю выделять мышкой текст на секторах */
  user-select: none;
  font-size: 20px;
  font-weight: 600;
  color: #dedede;
  text-shadow: #dd0868 1px 1px 1px; 
}

/* язычок */
.ticker {
  /* добавляем относительное позиционирование */
  position: relative;
  /* устанавливаем размеры */
  left: calc(var(--size) / -15);
  width: calc(var(--size) / 10);
  height: calc(var(--size) / 20);
  /* фон язычка */
  background: var(--lg);
  /* делаем так, чтобы язычок был выше колеса */
  z-index: 1;
  /* форма язычка */
  clip-path: polygon(20% 0, 100% 50%, 20% 100%, 0% 50%);
  /* устанавливаем точку, относительно которой будет вращаться язычок при движении колеса */
  transform-origin: center left;
}

/* кнопка запуска колеса */
.btn-spin {
  font-weight: 600;
  color: #ffffff;
  background: #fdb10e;
  border: #ffda02 2px solid;
  width: 200px;
  /* берём размер шрифта такой же, как в колесе */
  font-size: inherit;
  /* добавляем отступы от текста внутри кнопки */
  padding: 0.9rem 2rem 1rem;
  /* скругляем углы */
  border-radius: 0.5rem;
  /* меняем внешний вид курсора над кнопкой на руку*/
  cursor: pointer;
  transition: ease-in-out 0.2s;
  position: relative;
  overflow: hidden;
}

.btn-spin::after {
  content: '';
  position: absolute;
  top: -60%; /* Смещаем вверх для создания эффекта глянца */
  left: -10%;
  width: 120%; /* Ширина больше, чем у кнопки, для полного покрытия */
  height: 90%; /* Высота больше, чтобы создать эффект глянца */
  background: linear-gradient(rgba(255, 255, 255, 0.258), transparent); /* Градиент для эффекта глянца */
  transform: rotate(180deg); /* Поворачиваем для диагонального эффекта */
  border-radius: 100%; /* Скругляем углы */
}

.btn-spin:hover {
  background: #ffda02;
  color: #c97d02;
  border: #ffb719 2px solid;
}

/* если кнопка нажата и неактивна */
.btn-spin:disabled {
  /* меняем внешний вид курсора */
  cursor: progress;
  /* делаем кнопку полупрозрачной */
  opacity: 0.25;
}

/* анимация вращения */
.is-spinning .spinner {
  transition: transform 8s cubic-bezier(0.1, -0.01, 0, 1);
}

/* анимация движения язычка */
.is-spinning .ticker {
          animation: tick 700ms cubic-bezier(0.34, 1.56, 0.64, 1);
}


/* эффект, когда колесо задевает язычок при вращении */
@keyframes tick {
  40% {
    /* чуть поворачиваем язычок наверх в середине анимации */
    transform: rotate(-12deg);
  }
}

/* анимируем выпавший сектор */
.prize.selected .text {
  /* делаем текст белым */
  color: #f5e143;
  -webkit-text-stroke: 0.5px #888040;
  font-weight: 800;
  /* настраиваем длительность анимации */
  animation: selected 800ms ease;
}

/* настраиваем анимацию текста на выпавшем секторе по кадрам */
@keyframes selected {
  /* что происходит на 25% от начала анимации */
  25% {
    /* увеличиваем текст в 1,25 раза */
    transform: scale(1.25);
    /* добавляем тексту тень */
    text-shadow: 1vmin 1vmin 0 hsla(0 0% 0% / 0.1);
  }
  40% {
    transform: scale(0.92);
    text-shadow: 0 0 0 hsla(0 0% 0% / 0.2);
  }
  60% {
    transform: scale(1.02);
    text-shadow: 0.5vmin 0.5vmin 0 hsla(0 0% 0% / 0.1);
  }
  75% {
    transform: scale(0.98);
  }
  85% {
    transform: scale(1);
  }
}

@media (max-width: 576px) {

  body {
    background-size: 500%;
  }

  .container {
    place-items: center;
  }

  img {
    margin-top: 5%;
    height: 90pt;
  }

  h1 {
    margin-top: 10%;
    font-size: 45px;
  }
  p {
    margin-top: 5%;
    font-size: 26px;
    width: 95%;
  }
  .deal-wheel {
    margin-top: 10%;
    --size: clamp(260px, 60vmin, 260px);
    font-size: calc(var(--size) / 21);
    padding: 25px;
  }
  .prize {
    font-size: 14px;
  }
  .btn-spin {
    font-size: 16px;
    padding: 5px;
    width: 100px;
    height: 35px;
    margin-top: 8px;
  }
  .prize {
    padding: 0px 60px 0px 0px;
    width: 41%;
    height: 41%;
    font-size: 14px;
    font-weight: 600;
    text-align: center;
  }
}

@media (min-width: 576px) and (max-width: 992px) {

  body {
    background-size: 350%;
  }

  .container {
    place-items: center;
  }

  img {
    margin-top: 5%;
    height: 120pt;
  }

  h1 {
    margin-top: 5%;
    font-size: 56px;
  }
  p {
    margin-top: 5%;
    font-size: 36px;
    width: 95%;
  }
  .deal-wheel {
    margin-top: 5%;
    --size: clamp(400px, 60vmin, 400px);
    font-size: calc(var(--size) / 21);
    padding: 38px;
  }
  .btn-spin {
    font-size: 16px;
    padding: 5px;
    width: 0150px;
    height: 45px;
    margin-top: 12px;
  }
  .prize {
    padding: 0px 50px 0px 0px;
    width: 45%;
    height: 45%;
    font-size: 22px;
    font-weight: 600;
    text-align: center;
  }

}

@media (min-width:992px) and (max-width:1200px) {
    body {
    background-size: 200%;
  }
}

@media (min-width:1200px) and (max-width:1400px) {
  body {
  background-size: cover;
}
}